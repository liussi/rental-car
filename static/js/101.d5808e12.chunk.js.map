{"version":3,"file":"static/js/101.d5808e12.chunk.js","mappings":"+MAEO,MAAMA,EAAYC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iIASrBC,EAAYJ,EAAAA,GAAOC,GAAEI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4IASrBG,EAAiBN,EAAAA,GAAOO,OAAMC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+O,0CC+C3C,QAtDA,SAAaM,GAAmB,IAAlB,YAAEC,GAAaD,EAC3B,MAAME,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAW1B,OATAC,EAAAA,EAAAA,YAAU,KACRP,GAASQ,EAAAA,EAAAA,GAAc,CAAEN,OAAMG,UAAS,GACvC,CAACL,EAAUE,KAQZO,EAAAA,EAAAA,MAACrB,EAAS,CAAAsB,SAAA,EACRC,EAAAA,EAAAA,KAAClB,EAAS,CAAAiB,SACPX,EAAYa,OAAS,EACpBb,EAAYc,KAAIC,IACdH,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,CAAChB,YAAae,GAAcA,EAAQE,OAG/CL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,MAIVf,EAtBc,GAsBOH,EAAYa,OAASP,IACzCM,EAAAA,EAAAA,KAAChB,EAAc,CAACuB,QAlBCC,KAErBnB,GAASoB,EAAAA,EAAAA,IAAWlB,EAAO,GAAG,EAgBcQ,SAAC,gBAIjD,E,cC7CO,MAAMW,EAAsBC,GAAUA,EAAMC,OAAOC,a,MCEnD,MAAMC,E,OAAmBpC,EAAOqC,IAAGnC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iLC+B1C,QAvBA,WACE,MAAMQ,GAAWC,EAAAA,EAAAA,MACXF,GAAcI,EAAAA,EAAAA,IAAYwB,EAAAA,IAC1BH,GAAerB,EAAAA,EAAAA,IAAYkB,IAIjCd,EAAAA,EAAAA,YAAU,KACRP,GAAS4B,EAAAA,EAAAA,MACT5B,GAASQ,EAAAA,EAAAA,KAAgB,GACxB,CAACR,IAEF,MAAM6B,EAA6B,OAAjBL,GAAyBA,EAAaZ,OAAS,EAAIY,EAAezB,EAGtF,OACEU,EAAAA,EAAAA,MAACgB,EAAgB,CAAAf,SAAA,EACfC,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,KACPnB,EAAAA,EAAAA,KAACoB,EAAI,CAAChC,YAAa8B,MAGzB,C","sources":["components/CardList/card.styled.js","components/CardList/card.jsx","redux/filter/filterSelector.js","pages/Catalog/catalog.styled.jsx","pages/Catalog/catalog.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\n\n     display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 24px;\n\n`\nexport const ListItems = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  grid-gap: 29px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const LoadMoreButton = styled.button`\n  color: #3470ff;\n  cursor: pointer;\n  border: none;\n  background: white;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  font-weight: 500;\n  font-size: 16px;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;","import CardItem from '../CardItem/cardItem';\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, ListItems, LoadMoreButton } from './card.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectLimitFilter,\n  selectPageFilter,\n} from '../../redux/catalog/selector';\nimport { getAllCatalog } from '../../redux/catalog/operations';\nimport { updatePage } from '../../redux/catalog/catalogSlice';\nimport Loader from 'components/Loader/loader';\n\nfunction Card({ catalogData }) {\n  const dispatch = useDispatch();\n\n  const page = useSelector(selectPageFilter);\n  const limit = useSelector(selectLimitFilter);\n  const totalPages = 3;\n  useEffect(() => {\n    dispatch(getAllCatalog({ page, limit }));\n  }, [dispatch, page]);\n\n  const handleNextPage = () => {\n\n    dispatch(updatePage(page + 1));\n  };\n\n  return (\n    <Container>\n      <ListItems>\n        {catalogData.length > 0 ? (\n          catalogData.map(product => (\n            <CardItem catalogData={product} key={product.id} />\n          ))\n        ) : (\n          <Loader />\n        )}\n      </ListItems>\n\n      {page < totalPages && catalogData.length > limit && (\n        <LoadMoreButton onClick={handleNextPage}>Load more</LoadMoreButton>\n      )}\n    </Container>\n  );\n}\n\nCard.propTypes = {\n  catalogData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      year: PropTypes.number.isRequired,\n      make: PropTypes.string.isRequired,\n      model: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      img: PropTypes.string,\n      description: PropTypes.string.isRequired,\n      fuelConsumption: PropTypes.string.isRequired,\n      engineSize: PropTypes.string.isRequired,\n      accessories: PropTypes.array.isRequired,\n      functionalities: PropTypes.array.isRequired,\n      rentalPrice: PropTypes.string.isRequired,\n      rentalCompany: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Card;\n","export const selectFilteredData = (state) => state.filter.filteredData;","import styled from '@emotion/styled';\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  margin: 0 auto;\n  margin-bottom: 50px;\n  min-height: 65vh;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCatalog } from '../../redux/catalog/selector';\n\nimport Card from 'components/CardList/card';\nimport Filter from 'components/Filter/filter';\nimport { selectFilteredData } from '../../redux/filter/filterSelector';\nimport { CatalogContainer } from './catalog.styled';\nimport { getAllCatalog, getCatalogList } from '../../redux/catalog/operations';\n\nfunction Catalog() {\n  const dispatch = useDispatch();\n  const catalogData = useSelector(selectCatalog);\n  const filteredData = useSelector(selectFilteredData);\n\n  \n\n  useEffect(() => {\n    dispatch(getCatalogList());\n    dispatch(getAllCatalog());\n  }, [dispatch]);\n\n    const cardsData = filteredData !== null && filteredData.length > 0 ? filteredData : catalogData;\n\n\n  return (\n    <CatalogContainer>\n      <Filter  />\n      <Card catalogData={cardsData} />\n    </CatalogContainer>\n  );\n}\n\nexport default Catalog;\n"],"names":["Container","styled","ul","_templateObject","_taggedTemplateLiteral","ListItems","_templateObject2","LoadMoreButton","button","_templateObject3","_ref","catalogData","dispatch","useDispatch","page","useSelector","selectPageFilter","limit","selectLimitFilter","useEffect","getAllCatalog","_jsxs","children","_jsx","length","map","product","CardItem","id","Loader","onClick","handleNextPage","updatePage","selectFilteredData","state","filter","filteredData","CatalogContainer","div","selectCatalog","getCatalogList","cardsData","Filter","Card"],"sourceRoot":""}